{"name": "TestCase#4 to without entering any fields!", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <method-wrapper '__eq__' of str object at 0x000001D7383B0390>('Telephone must be between 3 and 32 characters!')\n +    where <method-wrapper '__eq__' of str object at 0x000001D7383B0390> = 'E-Mail Address does not appear to be valid!'.__eq__\n +      where 'E-Mail Address does not appear to be valid!' = retrieve_telephone_warning_message()\n +        where retrieve_telephone_warning_message = <tests.POM.RegisterPage.RegisterPage object at 0x000001D73834DEB0>.retrieve_telephone_warning_message", "trace": "self = <tests.POM.test_Register.TestRegister object at 0x000001D73834E060>\n\n    @allure.title(\"TestCase#4 to without entering any fields!\")\n    @allure.description(\"Leaving as empty at fields and validating the input fields\")\n    def test_register_without_entering_any_fields(self):\n        print(\"4. Running without entering email/password\")\n    \n        home_page = HomePage(self.driver)\n        home_page.click_on_my_account_menu()\n        home_page.click_on_register_menu()\n        register_page = RegisterPage(self.driver)\n        register_page.enter_first_name(\"\")\n        register_page.enter_last_name(\"\")\n        register_page.enter_email(\"\")\n        register_page.enter_telephone_num(\"\")\n        register_page.enter_password_first(\"\")\n        register_page.enter_password_confirm(\"\")\n        register_page.click_continue_button()\n        policy_warning_message = \"Warning: You must agree to the Privacy Policy!\"\n        assert register_page.retrieve_privacy_warning_message().__contains__(policy_warning_message),\"All the fields must be entered!\"\n    \n        expected_firstname_warning_message = \"First Name must be between 1 and 32 characters!\"\n        assert register_page.retrieve_first_name_warning_message().__eq__(\n            expected_firstname_warning_message)\n    \n        expected_lastname_warning_message = \"Last Name must be between 1 and 32 characters!\"\n        assert register_page.retrieve_last_name_warning_message().__eq__(\n            expected_lastname_warning_message)\n    \n        expected_email_warning_message=\"E-Mail Address does not appear to be valid!\"\n        assert register_page.retrieve_email_warning_message().__eq__(\n            expected_email_warning_message)\n    \n        text = register_page.retrieve_telephone_warning_message()\n        expected_telephone_warning_message=\"Telephone must be between 3 and 32 characters!\"\n>       assert register_page.retrieve_telephone_warning_message().__eq__(\n            expected_telephone_warning_message)\nE       AssertionError: assert False\nE        +  where False = <method-wrapper '__eq__' of str object at 0x000001D7383B0390>('Telephone must be between 3 and 32 characters!')\nE        +    where <method-wrapper '__eq__' of str object at 0x000001D7383B0390> = 'E-Mail Address does not appear to be valid!'.__eq__\nE        +      where 'E-Mail Address does not appear to be valid!' = retrieve_telephone_warning_message()\nE        +        where retrieve_telephone_warning_message = <tests.POM.RegisterPage.RegisterPage object at 0x000001D73834DEB0>.retrieve_telephone_warning_message\n\ntest_Register.py:139: AssertionError"}, "description": "Leaving as empty at fields and validating the input fields", "attachments": [{"name": "stdout", "source": "6a43f430-59b2-4a94-b596-4bb3ec268a84-attachment.txt", "type": "text/plain"}], "start": 1732508063308, "stop": 1732508355748, "uuid": "21a06f9d-2032-4d27-b6f0-c990e5da3a48", "historyId": "9ceb1139de83bebe657791807f6613d4", "testCaseId": "9ceb1139de83bebe657791807f6613d4", "fullName": "tests.POM.test_Register.TestRegister#test_register_without_entering_any_fields", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests.POM"}, {"name": "suite", "value": "test_Register"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-07C4ROQ"}, {"name": "thread", "value": "11396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.POM.test_Register"}]}