{"name": "TestCase#3 to register with existing email/passwords!", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@name=\"email\"]/following-sibling::div\"}\n  (Session info: chrome=131.0.6778.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7D9846CB5+28821]\n\t(No symbol) [0x00007FF7D97B3840]\n\t(No symbol) [0x00007FF7D965578A]\n\t(No symbol) [0x00007FF7D96A91BE]\n\t(No symbol) [0x00007FF7D96A94AC]\n\t(No symbol) [0x00007FF7D96F2647]\n\t(No symbol) [0x00007FF7D96CF33F]\n\t(No symbol) [0x00007FF7D96EF412]\n\t(No symbol) [0x00007FF7D96CF0A3]\n\t(No symbol) [0x00007FF7D969A778]\n\t(No symbol) [0x00007FF7D969B8E1]\n\tGetHandleVerifier [0x00007FF7D9B7FCAD+3408013]\n\tGetHandleVerifier [0x00007FF7D9B9741F+3504127]\n\tGetHandleVerifier [0x00007FF7D9B8B5FD+3455453]\n\tGetHandleVerifier [0x00007FF7D990BDBB+835995]\n\t(No symbol) [0x00007FF7D97BEB5F]\n\t(No symbol) [0x00007FF7D97BA814]\n\t(No symbol) [0x00007FF7D97BA9AD]\n\t(No symbol) [0x00007FF7D97AA199]\n\tBaseThreadInitThunk [0x00007FFB34D2259D+29]\n\tRtlUserThreadStart [0x00007FFB3638AF38+40]", "trace": "self = <tests.POM.test_Register.TestRegister object at 0x000001F522F6AD50>\n\n    @allure.title(\"TestCase#3 to register with existing email/passwords!\")\n    @allure.description(\"Filling  with existing email/passwords\")\n    def test_register_with_existing_email(self):\n        print(\"3. Running with existing email/password\")\n    \n        home_page = HomePage(self.driver)\n        home_page.click_on_my_account_menu()\n        home_page.click_on_register_menu()\n        register_page = RegisterPage(self.driver)\n        register_page.enter_first_name(\"Balaji\")\n        register_page.enter_last_name(\"Ramana\")\n        register_page.enter_email(user_email)\n        register_page.enter_telephone_num(user_phone)\n        register_page.enter_password_first(user_pwd)\n        register_page.enter_password_confirm(user_pwd)\n        register_page.click_newsletter_yes_option_radio_button()\n        register_page.click_privacy_agree_checkbox()\n        register_page.click_continue_button()\n        register_page.retrieve_already_registered_message()\n    \n        already_registered_warning_message = \"Warning: E-Mail Address is already registered!\"\n>       assert register_page.retrieve_email_warning_message().__contains__(already_registered_warning_message)\n\ntest_Register.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nRegisterPage.py:76: in retrieve_email_warning_message\n    return self.driver.find_element(By.XPATH, self.email_warning_message_xpath).text\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F522F6ABD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7D97AA199]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB34D2259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB3638AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@name=\"email\"]/following-sibling::div\"}\nE         (Session info: chrome=131.0.6778.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7D9846CB5+28821]\nE       \t(No symbol) [0x00007FF7D97B3840]\nE       \t(No symbol) [0x00007FF7D965578A]\nE       \t(No symbol) [0x00007FF7D96A91BE]\nE       \t(No symbol) [0x00007FF7D96A94AC]\nE       \t(No symbol) [0x00007FF7D96F2647]\nE       \t(No symbol) [0x00007FF7D96CF33F]\nE       \t(No symbol) [0x00007FF7D96EF412]\nE       \t(No symbol) [0x00007FF7D96CF0A3]\nE       \t(No symbol) [0x00007FF7D969A778]\nE       \t(No symbol) [0x00007FF7D969B8E1]\nE       \tGetHandleVerifier [0x00007FF7D9B7FCAD+3408013]\nE       \tGetHandleVerifier [0x00007FF7D9B9741F+3504127]\nE       \tGetHandleVerifier [0x00007FF7D9B8B5FD+3455453]\nE       \tGetHandleVerifier [0x00007FF7D990BDBB+835995]\nE       \t(No symbol) [0x00007FF7D97BEB5F]\nE       \t(No symbol) [0x00007FF7D97BA814]\nE       \t(No symbol) [0x00007FF7D97BA9AD]\nE       \t(No symbol) [0x00007FF7D97AA199]\nE       \tBaseThreadInitThunk [0x00007FFB34D2259D+29]\nE       \tRtlUserThreadStart [0x00007FFB3638AF38+40]\n\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "Filling  with existing email/passwords", "attachments": [{"name": "stdout", "source": "82c9bbbd-70a0-421d-9e61-24208c5cce95-attachment.txt", "type": "text/plain"}], "start": 1732507507788, "stop": 1732507510427, "uuid": "c8154947-135b-49d2-8cf8-8e2e61bb40fc", "historyId": "24aa2a02e96abc0e3b09897028325984", "testCaseId": "24aa2a02e96abc0e3b09897028325984", "fullName": "tests.POM.test_Register.TestRegister#test_register_with_existing_email", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests.POM"}, {"name": "suite", "value": "test_Register"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-07C4ROQ"}, {"name": "thread", "value": "16436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.POM.test_Register"}]}